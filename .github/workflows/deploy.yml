name: deploy_workflow
on:
  push:
    branches:
      - master

jobs:
  deploy-android-customer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    env:
      ANDROID_SIGN_KEY: ${{ secrets.ANDROID_SIGN_KEY }} 
      KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD_DEV }}
      KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS_DEV }}
      STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD_DEV }}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.18.0-11.1.pre"
          channel: "beta"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: echo $ANDROID_SIGN_KEY | base64 -d > android/local.jks
      - run: echo "storeFile=$(pwd)/android/key.jks" > android/local.properties
      - run: echo "keyPassword=$KEY_PASSWORD" >> android/local.properties
      - run: echo "keyAlias=$KEY_ALIAS" >> android/local.properties
      - run: echo "storePassword=$STORRE_PASSWORD" >> android/local.properties
      - run: flutter build apk --split-per-abi --target lib/main.dart --release
      - run: npm install -g firebase-tools
      - run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app.apk \
            --app ${{ secrets.ANDROID_APP_ID_DEV }} \
            --token ${{ secrets.FIREBASE_TOKEN }}
